<table class="table" v-if="games">
                <thead>
                    <tr>
                        <th>Дата</th>
                        <th>Чемпионат</th>
                        <th>Игра</th>
                        <!--<th>Счёт</th>-->
                        <th>Итог</th>
                        <th>Статус</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="game in games" :key="game.id" v-on:click='select(game)'>
                        <td>{{ game.date }}</td>
                        <td>{{ game.leaN }}</td>
                        <td>{{ game.thNm }} - {{ game.taNm }}</td>
                        <!--<td>{{ game.sc1H }} : {{ game.sc1A }}</td>-->
                        <td>{{ game.scTH }} : {{ game.scTA }}</td>
                        <td>{{ game.stat }}</td>
                        <td><button /></td>
                    </tr>
                </tbody>
            </table>

            export default {
  data: () => ({
    date: null,
    dateFormatted: null,
    games: null,
    modal: false,
    menu1: false,
    menu2: false
  }),
  computed: {
    computedDateFormatted() {
      return this.formatDate(this.date);
    }
  },
  watch: {
    date(val) {
      this.dateFormatted = this.formatDate(this.date);
    }
  },
  methods: {
    formatDate(date) {
      if (!date) return null;
      const [day, month, year] = date.split(".");
      return `${month}/${day}/${year}`;
    },
    parseDate(date) {
      if (!date) return null;
      const [day, month, year] = date.split(".");
      return `${year}-${month.padStart(2, "0")}-${day.padStart(2, "0")}`;
    },
    async select(game) {
      console.log(game.id);
      try {
        this.stats = null;
        let response = await this.$http.get(
          "/api/SampleData/GetStatsForGame/" + game.id
        );
        console.log(response.data);
        this.stats = response.data;
      } catch (error) {
        console.log(error);
      }
    }
  },
  async created() {
    // ES2017 async/await syntax via babel-plugin-transform-async-to-generator
    // TypeScript can also transpile async/await down to ES5
    try {
      let response = await this.$http.get("/api/SampleData/GetGamesForDate");
      console.log(response.data);
      this.games = response.data.games;
      this.date = response.data.dateFormatted;
    } catch (error) {
      console.log(error);
    }
    // Old promise-based approach
    //this.$http
    //    .get('/api/SampleData/WeatherForecasts')
    //    .then(response => {
    //        console.log(response.data)
    //        this.forecasts = response.data
    //    })
    //    .catch((error) => console.log(error))*/
  }
};